// Script para testar a fun√ß√£o de checkout do Stripe
import fetch from 'node-fetch';
import { config } from 'dotenv';

// Carregar vari√°veis de ambiente
config();

// URLs e tokens
const SUPABASE_URL = process.env.SUPABASE_URL;
const FUNCTIONS_URL = `${SUPABASE_URL}/functions/v1`;
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;

// Token de autentica√ß√£o (substitua por um token v√°lido)
// Este token deve ser obtido ap√≥s login no sistema
const TOKEN = process.argv[2];

if (!TOKEN) {
  console.error('‚ùå Token n√£o fornecido. Use: node test_stripe_checkout.js SEU_TOKEN');
  console.error('Para obter um token, fa√ßa login no aplicativo e copie o valor do cookie "sb-access-token"');
  process.exit(1);
}

console.log('üîë Usando token:', TOKEN.substring(0, 15) + '...');

// ID do plano a ser testado (substitua pelo ID real do seu plano)
const PLANO_ID = process.argv[3] || 'e147dc1f-9a63-46c5-b4cb-3bad639c8162';

console.log('üßæ Testando checkout para plano:', PLANO_ID);

// Fun√ß√£o principal
async function testarCheckout() {
  try {
    console.log(`üåê URL da fun√ß√£o: ${FUNCTIONS_URL}/stripe-create-checkout`);
    
    // Fazer a requisi√ß√£o para a fun√ß√£o Edge
    const response = await fetch(`${FUNCTIONS_URL}/stripe-create-checkout`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${TOKEN}`,
        'x-application-name': 'EduPais'
      },
      body: JSON.stringify({ planoId: PLANO_ID })
    });
    
    // Obter resposta como texto para depura√ß√£o
    const responseText = await response.text();
    
    console.log(`üì° Status da resposta: ${response.status} ${response.statusText}`);
    console.log('üìÑ Resposta completa:');
    console.log(responseText);
    
    // Tentar analisar como JSON se poss√≠vel
    try {
      const responseData = JSON.parse(responseText);
      
      if (response.ok && responseData.url) {
        console.log('‚úÖ Checkout criado com sucesso!');
        console.log('üîó URL de checkout:', responseData.url);
      } else {
        console.error('‚ùå Erro retornado pela API:', responseData.error || 'Erro desconhecido');
        if (responseData.details) {
          console.error('üìã Detalhes:', responseData.details);
        }
      }
    } catch (e) {
      console.error('‚ùå Erro ao analisar resposta JSON:', e);
    }
  } catch (error) {
    console.error('‚ùå Erro ao fazer requisi√ß√£o:', error);
  }
}

// Executar o teste
testarCheckout(); 